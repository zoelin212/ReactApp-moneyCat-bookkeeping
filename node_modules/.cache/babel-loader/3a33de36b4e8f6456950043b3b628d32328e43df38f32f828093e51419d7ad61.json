{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/cat/my-app/src/components/DateRangeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { faCalendarDays } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateRangeForm(props) {\n  _s();\n  const [billingDate, setBillingDate] = useState(null);\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\n  useEffect(() => {\n    const fetchBillingDate = async () => {\n      const sessionEmail = localStorage.getItem(\"email\");\n      console.log(sessionEmail);\n      const response = await axios.post('https://www.zoelindev.com/moneyCatBackend/dateRangeForm.php', {\n        email: sessionEmail\n      });\n      const data = response.data;\n      setBillingDate(data.billing);\n    };\n    fetchBillingDate();\n  }, [props.sessionEmail]);\n  useEffect(() => {\n    if (billingDate) {\n      console.log('billingDate: ' + billingDate);\n      const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const options = [];\n      const now = new Date();\n      let monthNow = monthNames[now.getMonth()];\n      console.log(monthNow);\n      const yearNow = now.getFullYear();\n      for (let i = 1; i < 13; i++) {\n        const now = new Date();\n        const monthStartDate = new Date(now.getFullYear(), now.getMonth() + i - 1, now.getDate());\n        const monthEndDate = new Date(now.getFullYear(), now.getMonth() + i + 0, billingDate - 1);\n        const optionLabel = `${monthNames[monthStartDate.getMonth()]} ${billingDate} ~ ${monthNames[monthEndDate.getMonth()]} ${monthEndDate.getDate()}`;\n        const optionStartDate = monthStartDate.toISOString().slice(0, 10);\n        options.push({\n          startDate: optionStartDate,\n          endDate: monthEndDate.toISOString(),\n          label: optionLabel\n        });\n      }\n      setSelectedDateRange(options[0]);\n      setOptions(options);\n    }\n  }, [billingDate]);\n  const [options, setOptions] = useState([{\n    startDate: \"\",\n    label: \"Choose date range\"\n  }]);\n  const handleDateRangeChange = event => {\n    const selectedOption = options.find(option => option.startDate === event.target.value);\n    setSelectedDateRange(selectedOption);\n    console.log(selectedOption);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Do something with selectedDateRange\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCalendarDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), \"2023 /\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDateRange ? selectedDateRange.startDate : '',\n        onChange: handleDateRangeChange,\n        required: true,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.startDate,\n          children: option.label\n        }, option.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(DateRangeForm, \"QpcYcnCL8/ahKgEnkKvMLuTkgA0=\");\n_c = DateRangeForm;\nexport default DateRangeForm;\nvar _c;\n$RefreshReg$(_c, \"DateRangeForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","faCalendarDays","FontAwesomeIcon","DateRangeForm","props","billingDate","setBillingDate","selectedDateRange","setSelectedDateRange","fetchBillingDate","sessionEmail","localStorage","getItem","console","log","response","post","email","data","billing","monthNames","options","now","Date","monthNow","getMonth","yearNow","getFullYear","i","monthStartDate","getDate","monthEndDate","optionLabel","optionStartDate","toISOString","slice","push","startDate","endDate","label","setOptions","handleDateRangeChange","event","selectedOption","find","option","target","value","handleSubmit","preventDefault","map"],"sources":["/Users/zoe/Desktop/Independent/cat/my-app/src/components/DateRangeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {faCalendarDays} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction DateRangeForm(props) {\n    const [billingDate, setBillingDate] = useState(null);\n    const [selectedDateRange, setSelectedDateRange] = useState(null);\n\n    useEffect(() => {\n        const fetchBillingDate = async () => {\n\n            const sessionEmail = localStorage.getItem(\"email\");\n            console.log(sessionEmail);\n            const response = await axios.post('https://www.zoelindev.com/moneyCatBackend/dateRangeForm.php', { email: sessionEmail });\n            const data = response.data;\n            setBillingDate(data.billing);\n        };\n\n        fetchBillingDate();\n    }, [props.sessionEmail]);\n\n    useEffect(() => {\n        if (billingDate) {\n            console.log('billingDate: '+ billingDate);\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const options = [];\n\n            const now = new Date();\n            let monthNow = monthNames[now.getMonth()];\n            console.log(monthNow);\n\n            const yearNow = now.getFullYear()\n\n            for (let i = 1; i < 13; i++) {\n                const now = new Date();\n                const monthStartDate = new Date(now.getFullYear(), now.getMonth()  + i - 1, now.getDate());\n                const monthEndDate = new Date(now.getFullYear(), now.getMonth() + i + 0, billingDate - 1);\n                const optionLabel = `${monthNames[monthStartDate.getMonth()]} ${billingDate} ~ ${monthNames[monthEndDate.getMonth()]} ${monthEndDate.getDate()}`;\n                const optionStartDate = monthStartDate.toISOString().slice(0, 10);\n                options.push({\n                    startDate: optionStartDate,\n                    endDate: monthEndDate.toISOString(),\n                    label: optionLabel\n                });\n            }\n\n            setSelectedDateRange(options[0]);\n            setOptions(options);\n        }\n    }, [billingDate]);\n\n    const [options, setOptions] = useState([{ startDate: \"\", label: \"Choose date range\" }]);\n\n    const handleDateRangeChange = (event) => {\n        const selectedOption = options.find(option => option.startDate === event.target.value);\n        setSelectedDateRange(selectedOption);\n        console.log(selectedOption);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // Do something with selectedDateRange\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n            <FontAwesomeIcon icon={faCalendarDays} />\n            2023 / \n                <select value={selectedDateRange ? selectedDateRange.startDate : ''} onChange={handleDateRangeChange} required>\n                    {options.map(option => (\n                        <option key={option.startDate} value={option.startDate}>{option.label}</option>\n                    ))}\n                </select>\n            </label>\n            <button type=\"submit\">Submit</button>\n        </form>\n    );\n}\n\nexport default DateRangeForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}