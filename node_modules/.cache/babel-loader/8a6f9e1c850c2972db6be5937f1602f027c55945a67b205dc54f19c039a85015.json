{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/cat/my-app/src/components/DateRangeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { faCalendarDays } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateRangeForm(props) {\n  _s();\n  const [billingDate, setBillingDate] = useState(null);\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\n  const [options, setOptions] = useState([{\n    startDate: \"\",\n    label: \"Choose date\"\n  }]);\n  //const [startDate, setStartDate] = useState();\n  //const [endDate, setEndDate] = useState();\n\n  useEffect(() => {\n    const fetchBillingDate = async () => {\n      const sessionEmail = localStorage.getItem(\"email\");\n      console.log(sessionEmail);\n      const response = await axios.post('https://www.zoelindev.com/moneyCatBackend/dateRangeForm.php', {\n        email: sessionEmail\n      });\n      const data = response.data;\n      setBillingDate(data.billing);\n    };\n    fetchBillingDate();\n  }, [props.sessionEmail]);\n  useEffect(() => {\n    if (billingDate) {\n      console.log('billingDate: ' + billingDate);\n      const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const options = [];\n      const now = new Date();\n      let monthNow = monthNames[now.getMonth()];\n      console.log(monthNow);\n      for (let i = 1; i < 13; i++) {\n        const now = new Date();\n        const monthStartDate = new Date(now.getFullYear(), now.getMonth() + i - 1, billingDate);\n        const monthEndDate = new Date(now.getFullYear(), now.getMonth() + i + 0, billingDate - 1);\n        const optionLabel = `${monthNames[monthStartDate.getMonth()]} ${billingDate} ~ ${monthNames[monthEndDate.getMonth()]} ${monthEndDate.getDate()}`;\n        const optionStartDate = monthStartDate.toISOString().slice(0, 10);\n        const optionEndDate = monthEndDate.toISOString().slice(0, 10);\n        options.push({\n          startDate: optionStartDate,\n          endDate: optionEndDate,\n          label: optionLabel\n        });\n      }\n      setSelectedDateRange(options[0]);\n      setOptions(options);\n    }\n  }, [billingDate]);\n  const now = new Date();\n  const yearNow = now.getFullYear();\n  console.log(yearNow);\n  //consol.log(monthStartDate)\n\n  const monthStartDate = new Date(now.getFullYear(), now.getMonth() - 1, billingDate).toISOString().slice(0, 10);\n  const monthEndDate = new Date(now.getFullYear(), now.getMonth(), billingDate - 1);\n  localStorage.setItem(\"startDate\", monthStartDate);\n  const sessionStartDate = localStorage.getItem(\"startDate\");\n  localStorage.setItem(\"endDate\", monthEndDate);\n  const sessionEndDate = localStorage.getItem(\"endDate\");\n  console.log(sessionStartDate);\n  console.log(sessionEndDate);\n  const handleDateRangeChange = event => {\n    const selectedOption = options.find(option => option.startDate === event.target.value);\n    setSelectedDateRange(selectedOption);\n    console.log(selectedOption);\n    localStorage.setItem(\"startDate\", selectedOption.startDate);\n    const sessionStartDate = localStorage.getItem(\"startDate\");\n    localStorage.setItem(\"endDate\", selectedOption.endDate);\n    const sessionEndDate = localStorage.getItem(\"endDate\");\n    console.log(sessionStartDate);\n    console.log(sessionEndDate);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Do something with selectedDateRange\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCalendarDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), yearNow, \" /\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDateRange ? selectedDateRange.startDate : '',\n        onChange: handleDateRangeChange,\n        required: true,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.startDate,\n          children: option.label\n        }, option.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(DateRangeForm, \"dwWGLwNeTYqXxhYNHiLRXW1VsAQ=\");\n_c = DateRangeForm;\nexport default DateRangeForm;\nvar _c;\n$RefreshReg$(_c, \"DateRangeForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","faCalendarDays","FontAwesomeIcon","DateRangeForm","props","billingDate","setBillingDate","selectedDateRange","setSelectedDateRange","options","setOptions","startDate","label","fetchBillingDate","sessionEmail","localStorage","getItem","console","log","response","post","email","data","billing","monthNames","now","Date","monthNow","getMonth","i","monthStartDate","getFullYear","monthEndDate","optionLabel","getDate","optionStartDate","toISOString","slice","optionEndDate","push","endDate","yearNow","setItem","sessionStartDate","sessionEndDate","handleDateRangeChange","event","selectedOption","find","option","target","value","handleSubmit","preventDefault","map"],"sources":["/Users/zoe/Desktop/Independent/cat/my-app/src/components/DateRangeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { faCalendarDays } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction DateRangeForm(props) {\n    const [billingDate, setBillingDate] = useState(null);\n    const [selectedDateRange, setSelectedDateRange] = useState(null);\n    const [options, setOptions] = useState([{ startDate: \"\", label: \"Choose date\" }]);\n    //const [startDate, setStartDate] = useState();\n    //const [endDate, setEndDate] = useState();\n    \n\n    useEffect(() => {\n        const fetchBillingDate = async () => {\n\n            const sessionEmail = localStorage.getItem(\"email\");\n            console.log(sessionEmail);\n            const response = await axios.post('https://www.zoelindev.com/moneyCatBackend/dateRangeForm.php', { email: sessionEmail });\n            const data = response.data;\n            setBillingDate(data.billing);\n        };\n\n        fetchBillingDate();\n    }, [props.sessionEmail]);\n\n    useEffect(() => {\n        if (billingDate) {\n            console.log('billingDate: ' + billingDate);\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const options = [];\n\n            const now = new Date();\n            let monthNow = monthNames[now.getMonth()];\n            console.log(monthNow);\n\n            for (let i = 1; i < 13; i++) {\n                const now = new Date();\n                const monthStartDate = new Date(now.getFullYear(), now.getMonth() + i - 1, billingDate);\n\n                const monthEndDate = new Date(now.getFullYear(), now.getMonth() + i + 0, billingDate - 1);\n\n                const optionLabel = `${monthNames[monthStartDate.getMonth()]} ${billingDate} ~ ${monthNames[monthEndDate.getMonth()]} ${monthEndDate.getDate()}`;\n\n                const optionStartDate = monthStartDate.toISOString().slice(0, 10);\n                const optionEndDate = monthEndDate.toISOString().slice(0, 10);\n                options.push({\n                    startDate: optionStartDate,\n                    endDate: optionEndDate,\n                    label: optionLabel\n                });\n            }\n\n            setSelectedDateRange(options[0]);\n            setOptions(options);\n        }\n    }, [billingDate]);\n\n    const now = new Date();\n    const yearNow = now.getFullYear();\n    console.log(yearNow);\n    //consol.log(monthStartDate)\n\n    const monthStartDate = (new Date(now.getFullYear(), now.getMonth() - 1, billingDate)).toISOString().slice(0, 10);\n    const monthEndDate = new Date(now.getFullYear(), now.getMonth(), billingDate - 1);\n    localStorage.setItem(\"startDate\", monthStartDate);\n    const sessionStartDate= localStorage.getItem(\"startDate\");\n    localStorage.setItem(\"endDate\", monthEndDate);\n    const sessionEndDate= localStorage.getItem(\"endDate\");\n    console.log(sessionStartDate);\n    console.log(sessionEndDate);\n\n\n    const handleDateRangeChange = (event) => {\n        const selectedOption = options.find(option => option.startDate === event.target.value);\n        setSelectedDateRange(selectedOption);\n        console.log(selectedOption);\n\n        localStorage.setItem(\"startDate\", selectedOption.startDate);\n        const sessionStartDate= localStorage.getItem(\"startDate\");\n\n        localStorage.setItem(\"endDate\", selectedOption.endDate);\n        const sessionEndDate= localStorage.getItem(\"endDate\");\n\n        console.log(sessionStartDate);\n        console.log(sessionEndDate);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // Do something with selectedDateRange\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                <FontAwesomeIcon icon={faCalendarDays} />\n                {yearNow} /\n                <select value={selectedDateRange ? selectedDateRange.startDate : ''} onChange={handleDateRangeChange} required>\n                    {options.map(option => (\n                        <option key={option.startDate} value={option.startDate}>{option.label}</option>\n                    ))}\n                </select>\n            </label>\n        </form>\n    );\n}\n\nexport default DateRangeForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}