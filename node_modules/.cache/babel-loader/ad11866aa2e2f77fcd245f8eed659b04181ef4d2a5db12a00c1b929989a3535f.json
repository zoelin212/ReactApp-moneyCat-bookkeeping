{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/cat/my-app/src/components/DateRangeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarDays } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateRangeForm(props) {\n  _s();\n  const [billingDate, setBillingDate] = useState(null);\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\n  useEffect(() => {\n    const fetchBillingDate = async () => {\n      const response = await fetch(`https://www.zoelindev.com/moneyCatBackend/chartSpend.php?email=${props.email}`);\n      const data = await response.json();\n      setBillingDate(data.billing);\n    };\n    fetchBillingDate();\n  }, [props.email]);\n  useEffect(() => {\n    if (billingDate) {\n      const billStartMonth = new Date(billingDate).getMonth();\n      const billStartDay = new Date(billingDate).getDate();\n      const today = new Date();\n      const month = (billStartMonth + today.getMonth() + 12 - 1) % 12;\n      const year = today.getFullYear() - (month > today.getMonth() ? 1 : 0);\n      const startDate = new Date(year, month, billStartDay);\n      const endDate = new Date(year, month + 1, billStartDay - 1);\n      const optionLabel = `${startDate.toLocaleString('default', {\n        month: 'short'\n      })} ${billStartDay} ~ ${endDate.toLocaleString('default', {\n        month: 'short'\n      })} ${endDate.getDate()}`;\n      setSelectedDateRange({\n        startDate,\n        endDate,\n        label: optionLabel\n      });\n    }\n  }, [billingDate]);\n  const handleDateRangeChange = event => {\n    setSelectedDateRange(event.target.value ? JSON.parse(event.target.value) : null);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Do something with selectedDateRange\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCalendarDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDateRange ? JSON.stringify(selectedDateRange) : '',\n        onChange: handleDateRangeChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), selectedDateRange ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: JSON.stringify(selectedDateRange),\n          children: selectedDateRange.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(DateRangeForm, \"xHkc9A0hOerCKsAPzna78aTgrhQ=\");\n_c = DateRangeForm;\nexport default DateRangeForm;\nvar _c;\n$RefreshReg$(_c, \"DateRangeForm\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faCalendarDays","DateRangeForm","props","billingDate","setBillingDate","selectedDateRange","setSelectedDateRange","fetchBillingDate","response","fetch","email","data","json","billing","billStartMonth","Date","getMonth","billStartDay","getDate","today","month","year","getFullYear","startDate","endDate","optionLabel","toLocaleString","label","handleDateRangeChange","event","target","value","JSON","parse","handleSubmit","preventDefault","stringify"],"sources":["/Users/zoe/Desktop/Independent/cat/my-app/src/components/DateRangeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCalendarDays} from '@fortawesome/free-solid-svg-icons'\n\nfunction DateRangeForm(props) {\n  const [billingDate, setBillingDate] = useState(null);\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\n\n  useEffect(() => {\n    const fetchBillingDate = async () => {\n      const response = await fetch(`https://www.zoelindev.com/moneyCatBackend/chartSpend.php?email=${props.email}`);\n      const data = await response.json();\n      setBillingDate(data.billing);\n    };\n\n    fetchBillingDate();\n  }, [props.email]);\n\n  useEffect(() => {\n    if (billingDate) {\n      const billStartMonth = new Date(billingDate).getMonth();\n      const billStartDay = new Date(billingDate).getDate();\n      const today = new Date();\n\n      const month = (billStartMonth + today.getMonth() + 12 - 1) % 12;\n      const year = today.getFullYear() - (month > today.getMonth() ? 1 : 0);\n      const startDate = new Date(year, month, billStartDay);\n      const endDate = new Date(year, month + 1, billStartDay - 1);\n      const optionLabel = `${startDate.toLocaleString('default', { month: 'short' })} ${billStartDay} ~ ${endDate.toLocaleString('default', { month: 'short' })} ${endDate.getDate()}`;\n\n      setSelectedDateRange({ startDate, endDate, label: optionLabel });\n    }\n  }, [billingDate]);\n\n  const handleDateRangeChange = (event) => {\n    setSelectedDateRange(event.target.value ? JSON.parse(event.target.value) : null);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Do something with selectedDateRange\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n      <FontAwesomeIcon icon={faCalendarDays} />\n        <select value={selectedDateRange ? JSON.stringify(selectedDateRange) : ''} onChange={handleDateRangeChange} required>\n          <option value=\"\">Choose Date</option>\n          {selectedDateRange ? (\n            <option value={JSON.stringify(selectedDateRange)}>{selectedDateRange.label}</option>\n          ) : null}\n        </select>\n      </label>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default DateRangeForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}