{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/cat/my-app/src/components/DateRangeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { faCalendarDays } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateRangeForm(props) {\n  _s();\n  const [billingDate, setBillingDate] = useState(null);\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\n  const [options, setOptions] = useState([{\n    startDate: \"\",\n    label: \"Choose date\"\n  }]);\n  const sessionStartDate = localStorage.getItem(\"startDate\");\n  const sessionendDate = localStorage.getItem(\"endDate\");\n  const [startDate, setStartDate] = useState(sessionStartDate);\n  const [endDate, setEndDate] = useState(sessionendDate);\n  useEffect(() => {\n    const fetchBillingDate = async () => {\n      const sessionEmail = localStorage.getItem(\"email\");\n      console.log(sessionEmail);\n      const response = await axios.post('https://www.zoelindev.com/moneyCatBackend/dateRangeForm.php', {\n        email: sessionEmail\n      });\n      const data = response.data;\n      setBillingDate(data.billing);\n    };\n    fetchBillingDate();\n  }, [props.sessionEmail]);\n  useEffect(() => {\n    if (billingDate) {\n      console.log('billingDate: ' + billingDate);\n      const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const options = [];\n      const now = new Date();\n      let monthNow = monthNames[now.getMonth()];\n      //console.log(monthNow);\n\n      for (let i = 0; i < 13; i++) {\n        const now = new Date();\n        const monthStartDate = new Date(now.getFullYear(), now.getMonth() + i - 1, billingDate);\n        const monthEndDate = new Date(now.getFullYear(), now.getMonth() + i + 0, billingDate - 1);\n        const optionLabel = `${monthNames[monthStartDate.getMonth()]} ${billingDate} ~ ${monthNames[monthEndDate.getMonth()]} ${monthEndDate.getDate()}`;\n        const optionStartDate = monthStartDate.toISOString().slice(0, 10);\n        const optionEndDate = monthEndDate.toISOString().slice(0, 10);\n        options.push({\n          startDate: optionStartDate,\n          endDate: optionEndDate,\n          label: optionLabel\n        });\n      }\n      setSelectedDateRange(options[0]);\n      setOptions(options);\n    }\n  }, [billingDate]);\n\n  //Year Now\n  const now = new Date();\n  const yearNow = now.getFullYear();\n  //console.log(yearNow);\n\n  //set session for date\n  const monthStartDate = new Date(now.getFullYear(), now.getMonth(), billingDate).toISOString().slice(0, 10);\n  const monthEndDate = new Date(now.getFullYear(), now.getMonth() + 1, billingDate - 1).toISOString().slice(0, 10);\n  ;\n\n  // localStorage.setItem(\"startDate\", monthStartDate);\n  // const sessionStartDate= localStorage.getItem(\"startDate\");\n  // localStorage.setItem(\"endDate\", monthEndDate);\n  // const sessionEndDate= localStorage.getItem(\"endDate\");\n  // console.log(\"session: \"+sessionStartDate);\n  // console.log(\"session: \"+sessionEndDate);\n\n  const handleDateRangeChange = event => {\n    const selectedOption = options.find(option => option.startDate === event.target.value);\n    setSelectedDateRange(selectedOption);\n    console.log(selectedOption);\n    localStorage.setItem(\"startDate\", selectedOption.startDate);\n    const sessionStartDate = localStorage.getItem(\"startDate\");\n    localStorage.setItem(\"endDate\", selectedOption.endDate);\n    const sessionEndDate = localStorage.getItem(\"endDate\");\n    console.log(\"session: \" + sessionStartDate);\n    console.log(\"session: \" + sessionEndDate);\n    setStartDate(selectedOption.startDate);\n    setEndDate(selectedOption.endDate);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Do something with selectedDateRange\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCalendarDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), yearNow, \" /\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDateRange ? selectedDateRange.startDate : '',\n        onChange: handleDateRangeChange,\n        required: true,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.startDate,\n          children: option.label\n        }, option.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(DateRangeForm, \"oeZsCTfSvddNzbzJMPOKBf8hvBQ=\");\n_c = DateRangeForm;\nexport default DateRangeForm;\nvar _c;\n$RefreshReg$(_c, \"DateRangeForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","faCalendarDays","FontAwesomeIcon","DateRangeForm","props","billingDate","setBillingDate","selectedDateRange","setSelectedDateRange","options","setOptions","startDate","label","sessionStartDate","localStorage","getItem","sessionendDate","setStartDate","endDate","setEndDate","fetchBillingDate","sessionEmail","console","log","response","post","email","data","billing","monthNames","now","Date","monthNow","getMonth","i","monthStartDate","getFullYear","monthEndDate","optionLabel","getDate","optionStartDate","toISOString","slice","optionEndDate","push","yearNow","handleDateRangeChange","event","selectedOption","find","option","target","value","setItem","sessionEndDate","handleSubmit","preventDefault","map"],"sources":["/Users/zoe/Desktop/Independent/cat/my-app/src/components/DateRangeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { faCalendarDays } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction DateRangeForm(props) {\n    const [billingDate, setBillingDate] = useState(null);\n    const [selectedDateRange, setSelectedDateRange] = useState(null);\n    const [options, setOptions] = useState([{ startDate: \"\", label: \"Choose date\" }]);\n    const sessionStartDate= localStorage.getItem(\"startDate\");\n    const sessionendDate= localStorage.getItem(\"endDate\");\n    const [startDate, setStartDate] = useState(sessionStartDate);\n    const [endDate, setEndDate] = useState(sessionendDate);\n    \n\n    useEffect(() => {\n        const fetchBillingDate = async () => {\n\n            const sessionEmail = localStorage.getItem(\"email\");\n            console.log(sessionEmail);\n            const response = await axios.post('https://www.zoelindev.com/moneyCatBackend/dateRangeForm.php', { email: sessionEmail });\n            const data = response.data;\n            setBillingDate(data.billing);\n        };\n\n        fetchBillingDate();\n    }, [props.sessionEmail]);\n\n    useEffect(() => {\n        if (billingDate) {\n            console.log('billingDate: ' + billingDate);\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const options = [];\n\n            const now = new Date();\n            let monthNow = monthNames[now.getMonth()];\n            //console.log(monthNow);\n\n            for (let i = 0; i < 13; i++) {\n                const now = new Date();\n                const monthStartDate = new Date(now.getFullYear(), now.getMonth() + i - 1, billingDate);\n\n                const monthEndDate = new Date(now.getFullYear(), now.getMonth() + i + 0, billingDate - 1);\n\n                const optionLabel = `${monthNames[monthStartDate.getMonth()]} ${billingDate} ~ ${monthNames[monthEndDate.getMonth()]} ${monthEndDate.getDate()}`;\n\n                const optionStartDate = monthStartDate.toISOString().slice(0, 10);\n                const optionEndDate = monthEndDate.toISOString().slice(0, 10);\n                options.push({\n                    startDate: optionStartDate,\n                    endDate: optionEndDate,\n                    label: optionLabel\n                });\n            }\n\n            setSelectedDateRange(options[0]);\n            setOptions(options);\n        }\n    }, [billingDate]);\n\n    //Year Now\n    const now = new Date();\n    const yearNow = now.getFullYear();\n    //console.log(yearNow);\n \n    //set session for date\n    const monthStartDate = (new Date(now.getFullYear(), now.getMonth(), billingDate)).toISOString().slice(0, 10);\n    const monthEndDate = (new Date(now.getFullYear(), now.getMonth()+1, billingDate - 1)).toISOString().slice(0, 10);;\n\n    // localStorage.setItem(\"startDate\", monthStartDate);\n    // const sessionStartDate= localStorage.getItem(\"startDate\");\n    // localStorage.setItem(\"endDate\", monthEndDate);\n    // const sessionEndDate= localStorage.getItem(\"endDate\");\n    // console.log(\"session: \"+sessionStartDate);\n    // console.log(\"session: \"+sessionEndDate);\n\n\n    const handleDateRangeChange = (event) => {\n        const selectedOption = options.find(option => option.startDate === event.target.value);\n        setSelectedDateRange(selectedOption);\n        console.log(selectedOption);\n\n        localStorage.setItem(\"startDate\", selectedOption.startDate);\n        const sessionStartDate= localStorage.getItem(\"startDate\");\n        localStorage.setItem(\"endDate\", selectedOption.endDate);\n        const sessionEndDate= localStorage.getItem(\"endDate\");\n        console.log(\"session: \"+sessionStartDate);\n        console.log(\"session: \"+sessionEndDate);\n\n        setStartDate(selectedOption.startDate);\n        setEndDate(selectedOption.endDate);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // Do something with selectedDateRange\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                <FontAwesomeIcon icon={faCalendarDays} />\n                {yearNow} /\n                <select value={selectedDateRange ? selectedDateRange.startDate : ''} onChange={handleDateRangeChange} required>\n                    {options.map(option => (\n                        <option key={option.startDate} value={option.startDate}>{option.label}</option>\n                    ))}\n                </select>\n            </label>\n        </form>\n    );\n}\n\nexport default DateRangeForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}