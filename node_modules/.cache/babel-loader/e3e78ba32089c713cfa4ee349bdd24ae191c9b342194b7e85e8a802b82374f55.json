{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/cat/my-app/src/components/add.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Add = props => {\n  _s();\n  const {\n    handleSubmit\n  } = props;\n  const [note, setNote] = useState('');\n  const [date, setDate] = useState('');\n  const [amount, setAmount] = useState('');\n  const today = new Date();\n  const futureDate = today.getDate();\n  today.setDate(futureDate);\n  console.log(current);\n  const updateAmount = value => {\n    setAmount(amount + value);\n  };\n  const createDigits = () => {\n    const digits = [];\n    for (let i = 1; i < 10; i++) {\n      digits.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateAmount(i.toString()),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this));\n    }\n    return digits;\n  };\n  const ac = () => {\n    if (amount === \"\") {\n      return;\n    }\n    setAmount('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row1\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        className: \"date\",\n        name: \"date\",\n        \"aria-label\": \"date\",\n        placeholder: current,\n        required: true,\n        value: current,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"note\",\n        className: \"note\",\n        name: \"note\",\n        \"aria-label\": \"note\",\n        placeholder: \"Click to write a note\",\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"total\",\n          value: amount,\n          children: amount || '0'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateAmount('0'),\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => ac(),\n        children: \"AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"digits\",\n      children: createDigits()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowRight\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateAmount('.'),\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => handleSubmit(note, date, amount),\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Add, \"+bsCi9i5TBR+Tg4WWgZWxAXnQa0=\");\n_c = Add;\nexport default Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["useState","Add","props","handleSubmit","note","setNote","date","setDate","amount","setAmount","today","Date","futureDate","getDate","console","log","current","updateAmount","value","createDigits","digits","i","push","toString","ac","e","target"],"sources":["/Users/zoe/Desktop/Independent/cat/my-app/src/components/add.js"],"sourcesContent":["import { useState } from \"react\";\n\n\nconst Add = (props) => {\n\n    const { handleSubmit } = props;\n\n    const [note, setNote] = useState('');\n    const [date, setDate] = useState('');\n    const [amount, setAmount] = useState('');\n\n    const today = new Date();\n    const futureDate = today.getDate();\n    today.setDate(futureDate);\n\n    console.log(current);\n\n    const updateAmount = value => {\n        setAmount(amount + value);\n    }\n\n    const createDigits = () => {\n        const digits = [];\n        for (let i = 1; i < 10; i++) {\n            digits.push(\n                <button\n                    key={i}\n                    onClick={() => updateAmount(i.toString())}>{i}\n                </button>\n            )\n        }\n        return digits;\n    }\n\n    const ac = () => {\n        if (amount === \"\") {\n            return;\n        }\n        setAmount('');\n    }\n\n    return (\n        <div className=\"addWrap\">\n            <div className=\"row1\">\n                <input\n                    type=\"date\"\n                    id=\"date\"\n                    className=\"date\"\n                    name=\"date\"\n                    aria-label=\"date\" placeholder={current}\n                    required\n                    value={current}\n                    onChange={(e) => setDate(e.target.value)}\n                />\n\n                <input\n                    type=\"text\"\n                    id=\"note\"\n                    className=\"note\"\n                    name=\"note\"\n                    aria-label=\"note\" placeholder=\"Click to write a note\"\n                    value={note}\n                    onChange={(e) => setNote(e.target.value)}\n                />\n            </div>\n            <div className=\"row2\">\n                <div className=\"display\">\n                    <span>$ </span>\n                    <span id=\"total\" value={amount}>{amount || '0'}</span>\n\n\n                </div>\n\n                <button onClick={() => updateAmount('0')}>0</button>\n\n                <button onClick={() => ac()}>AC</button>\n            </div>\n\n            <div className=\"digits\">\n                {createDigits()}\n            </div>\n\n            <div className=\"rowRight\">\n                <button onClick={() => updateAmount('.')}>.</button>\n                <button type=\"submit\" onClick={() => handleSubmit(note, date, amount)}>ADD</button>\n            </div>\n        </div>\n    );\n\n}\nexport default Add;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}